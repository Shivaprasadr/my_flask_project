name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - shiva_branch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: my_test_database
          MYSQL_USER: flask_user
          MYSQL_PASSWORD: user123
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Wait for MySQL service to be ready
      run: |
        for i in {1..10}; do
          if mysqladmin ping -h 127.0.0.1 -u root -ppassword --silent; then
            echo "MySQL is up and running"
            break
          fi
          echo "Waiting for MySQL to be ready... ($i/10)"
          sleep 10
        done

    - name: Grant all privileges to flask_user
      run: |
        mysql -h 127.0.0.1 -u root -ppassword -e "GRANT ALL PRIVILEGES ON my_test_database.* TO 'flask_user'@'%';"

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest -v
        pytest --cov-report=xml --cov=.

    - name: Upload coverage report
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/shiva_branch'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image
      env:
        DATE: ${{ github.event.head_commit.timestamp }}
        VERSION: ${{ github.run_number }}
        BRANCH: ${{ github.ref_name }}
      run: |
        # Extract the branch name from the full ref (refs/heads/branch-name)
        BRANCH_NAME=${BRANCH##*/}
        # Sanitize the branch name to be a valid Docker tag
        SAFE_BRANCH=$(echo "${BRANCH_NAME}" | sed -e 's/[^a-zA-Z0-9_.-]/-/g' | tr '[:upper:]' '[:lower:]')
        # Sanitize the date format
        SAFE_DATE=$(echo "${DATE}" | sed -e 's/[^a-zA-Z0-9_.-]/-/g')
        
        # Check if the branch name is empty
        if [ -z "$SAFE_BRANCH" ]; then
          echo "Branch name is empty. Exiting."
          exit 1
        fi
        
        # Build and push the Docker image
        docker buildx build --platform linux/amd64,linux/arm64 -t shivaprasad/my_flask_app:${SAFE_BRANCH}-${SAFE_DATE}-${VERSION} --push .
        
        # Tag and push the latest image if it's a push event
        if [ "${{ github.event_name }}" == 'push' ]; then
          docker tag shivaprasad/my_flask_app:${SAFE_BRANCH}-${SAFE_DATE}-${VERSION} shivaprasad/my_flask_app:${SAFE_BRANCH}-latest
          docker push shivaprasad/my_flask_app:${SAFE_BRANCH}-latest
        fi
