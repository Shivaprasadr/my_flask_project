"""Adding unique constraints for github_id and google_id

Revision ID: 0c169e71257c
Revises: 48d10698bd84
Create Date: 2024-10-04 15:03:41.597640

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '0c169e71257c'
down_revision = '48d10698bd84'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=250),
               nullable=False)
        batch_op.alter_column('github_id',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
        
        # Skip dropping indexes if you're not sure they exist
        # batch_op.drop_index('github_id')
        # batch_op.drop_index('google_id')

        # Create unique constraints for github_id and google_id
        batch_op.create_unique_constraint('unique_github_id', ['github_id'])
        batch_op.create_unique_constraint('unique_google_id', ['google_id'])

    # ### end Alembic commands ###



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('unique_google_id', type_='unique')
        batch_op.drop_constraint('unique_github_id', type_='unique')
        batch_op.create_index('google_id', ['google_id'], unique=True)
        batch_op.create_index('github_id', ['github_id'], unique=True)
        batch_op.alter_column('github_id',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=250),
               nullable=True)

    # ### end Alembic commands ###
